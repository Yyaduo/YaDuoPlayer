[versions]
agp = "8.9.1"
coilCompose = "2.4.0"
crashreport = "latest.release"
kotlin = "2.0.21"
coreKtx = "1.13.0"
junit = "4.13.2"
junitVersion = "1.2.1"
espressoCore = "3.6.1"
lifecycleRuntimeKtx = "2.8.3"
lifecycleProcess = "2.2.0"
activityCompose = "1.8.1"
composeBom = "2024.09.00"
appcompat = "1.7.0"
material = "1.12.0"
media3 = "1.4.1"
coroutines = "1.8.0"
retrofit = "2.11.0"
okhttp = "4.12.0"
gson = "2.11.0"

[libraries]
# ================== Core Android 核心Android库 ==================
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" } # Kotlin扩展的核心Android功能
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" } # 提供向后兼容支持
material = { group = "com.google.android.material", name = "material", version.ref = "material" } # Material Design组件实现

# ================== Compose UI相关库 ==================
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" } # 提供Compose与Activity的集成
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" } # Compose依赖的统一版本管理
androidx-ui = { group = "androidx.compose.ui", name = "ui" } # Compose基础UI组件
androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" } # Compose图形绘制支持
androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" } # Compose预览和调试工具
androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" } # Compose预览支持
androidx-material3 = { group = "androidx.compose.material3", name = "material3" } # Material Design 3的Compose实现
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coilCompose" } # Compose的图像加载库

# ================== Lifecycle 生命周期管理 ==================
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" } # 生命周期运行时管理(Kotlin扩展)
androidx-lifecycle-process = { group = "androidx.lifecycle", name = "lifecycle-process", version.ref = "lifecycleProcess" } # 跨进程生命周期管理

# ================== Coroutines 协程 ==================
kotlinx-coroutines-core = { group = "org.jetbrains.kotlin", name = "kotlinx-coroutines-core", version.ref = "coroutines" } # Kotlin协程核心库
kotlinx-coroutines-android = { group = "org.jetbrains.kotlin", name = "kotlinx-coroutines-android", version.ref = "coroutines" } # Android协程支持

# ================== Media Playback 媒体播放 ==================
androidx-media3-exoplayer = { module = "androidx.media3:media3-exoplayer", version.ref = "media3" } # ExoPlayer媒体播放引擎
androidx-media3-exoplayer-hls = { module = "androidx.media3:media3-exoplayer-hls", version.ref = "media3" } # HLS流媒体支持
androidx-media3-datasource-okhttp = { module = "androidx.media3:media3-datasource-okhttp", version.ref = "media3" } # 基于OkHttp的数据源
androidx-media3-session = { module = "androidx.media3:media3-session", version.ref = "media3" } # 媒体会话控制
androidx-media3-ui = { module = "androidx.media3:media3-ui", version.ref = "media3" } # 媒体播放UI组件

# ================== Networking 网络请求 ==================
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" } # REST API客户端库
retrofit-converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" } # Retrofit的Gson转换器
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" } # HTTP客户端实现
okhttp-logging = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" } # HTTP请求日志拦截器
gson = { module = "com.google.code.gson:gson", version.ref = "gson" } # JSON解析库

# ================== ThirdPartyPlugins 第三方插件 ==================
crashreport = { module = "com.tencent.bugly:crashreport", version.ref = "crashreport" } # 腾讯Bugly崩溃监控

# ================== Testing 测试相关 ==================
junit = { group = "junit", name = "junit", version.ref = "junit" } # 单元测试框架
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" } # Android环境JUnit扩展
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" } # UI自动化测试框架
androidx-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" } # Compose单元测试支持
androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" } # Compose测试清单支持

[plugins]
# ================== Build Plugins 构建插件 ==================
android-application = { id = "com.android.application", version.ref = "agp" } # Android应用构建插件
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" } # Kotlin Android支持插件
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" } # Kotlin Compose优化插件
android-library = { id = "com.android.library", version.ref = "agp" } # Android库模块构建插件